import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        List<Item> itemList = this.itemRepository.findAll();//菜信息
        List<SalesPromotion> salesPromotionList = this.salesPromotionRepository.findAll();//折扣信息
        Map<String,Boolean> SaleMap = new HashMap<>();//优惠菜
        for(String itemName : salesPromotionList.get(1).getRelatedItems()){
            SaleMap.put(itemName,true);
        }

        StringBuffer out = new StringBuffer();//输入信息
        Double pay = 0d;//总价
        Double discount = 0d;//优惠金额
        List<String> discountItemList = new ArrayList<>();
        out.append("============= 订餐明细 =============\n");
        for(String input:inputs) {
            List<String> words = Arrays.asList(input.split(" "));
            for (Item item : itemList) {
                if (words.get(0).equals(item.getId())) {
                    Double total = item.getPrice() * Integer.parseInt(words.get(2)); //单样菜总额
                    pay += total;//更新总价
                    if (SaleMap.containsKey(words.get(0))) { //如果是折扣菜
                        discount += (item.getPrice() / 2) * Integer.parseInt(words.get(2));//记录优惠金额
                        discountItemList.add(item.getName());//存储折扣菜单
                    }
                    out.append(MessageFormat.format("{0} x {1} = {2}元\n", item.getName(), words.get(2), (int) total.doubleValue()));

                }
            }
        }
            out.append("-----------------------------------\n");
            if((pay>=30d&&discount>6d)||(pay<30d&&discount!=0d)){
                out.append("使用优惠:\n");
                out.append(MessageFormat.format("指定菜品半价({0})，省{1}元\n",String.join("，",discountItemList),(int)discount.doubleValue()));
                out.append("-----------------------------------\n");
                pay -=discount;
            }else if(pay>30&&discount<=6){
                out.append("使用优惠:\n");
                out.append("满30减6元，省6元\n");
                out.append("-----------------------------------\n");
                pay -=6;
            }
            out.append("总计："+(int)pay.doubleValue()+"元\n" +
                    "===================================");

        return out.toString();
    }
}
